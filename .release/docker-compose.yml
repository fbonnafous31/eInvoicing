version: '3.8'

services:
  db:
    image: postgres:16
    container_name: einvoicing-db
    restart: always
    environment:
      POSTGRES_DB: einvoicing_local
      POSTGRES_USER: einvoicing
      POSTGRES_PASSWORD: einvoicing
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - ./scripts/einvoicing.sql:/docker-entrypoint-initdb.d/einvoicing.sql:ro
    networks:
      - einvoicing-net
    ports:
      - "5433:5432"

  backend:
    image: ghcr.io/fbonnafous31/e-invoicing-backend:latest
    container_name: einvoicing-backend
    restart: always
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - einvoicing-net
    ports:
      - "3000:3000"
    environment:
      - backend/.env     
    volumes:
      - uploads:/app/src/uploads      

  frontend:
    image: ghcr.io/fbonnafous31/e-invoicing-frontend:latest
    container_name: einvoicing-frontend
    restart: always
    depends_on:
      - backend
    networks:
      - einvoicing-net
    ports:
      - "8080:80"
    environment:
      - API_URL=http://backend:3000
      - AUTH0_DOMAIN=dev-23fb5qvzfnz3oi11.us.auth0.com
      - AUTH0_CLIENT_ID=a9p2JUoLAvv8Pij8953ESipvWvSVGA3d
      - AUTH0_AUDIENCE=https://api.einvoicing.local      

  mock-pdp:
    image: node:20-alpine
    container_name: einvoicing-mock-pdp
    working_dir: /app
    volumes:
      - ./mock-pdp:/app
    command: sh -c "npm install && npm start"
    ports:
      - "4000:4000"
    networks:
      - einvoicing-net
      
networks:
  einvoicing-net:

volumes:
  pgdata:
  uploads: